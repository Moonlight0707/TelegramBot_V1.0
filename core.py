import telebot

import config
import sendmail
import data
import pars_func

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands = ['start'])
def welcome(message):
	markup = types.ReplyKeyboardMarkup(resize_keyboard = False)
	button1 = types.KeyboardButton('üåê –û –∫–æ–º–ø–∞–Ω–∏–∏')
	button2 = types.KeyboardButton('üóÉ –ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã')
	button3 = types.KeyboardButton('üè¢ –ù–∞—à–∏ –∞–¥—Ä–µ—Å–∞')
	button4 = types.KeyboardButton('ü§ù –°—Ç–∞—Ç—å –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–æ–º')
	button5 = types.KeyboardButton('üì± –û—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π Telegram –Ω–æ–º–µ—Ä', request_contact=True)

	markup.add(button1,button2, button3, button4, button5)
	bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç {0.first_name}!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –î–û–ö–ê GROUP.\n"
		"–ú–µ–Ω—è –∑–æ–≤—É—Ç {1.first_name}, –∏ —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å –í–∞—Å —Å –Ω–∞–º–∏!".format(message.from_user, bot.get_me()),parse_mode = 'html',reply_markup = markup)

@bot.message_handler(commands = ['help'])
def help(message):
	bot.send_message(message.chat.id, data.help_message)

@bot.message_handler(content_types = ['text'])
def reaction(message):
	if message.chat.type == 'private':
		if message.text == 'üåê –û –∫–æ–º–ø–∞–Ω–∏–∏':
			bot.send_message(message.chat.id, data.about_company)

		elif  message.text == 'üóÉ –ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã':
			bot.send_message(message.chat.id, '\n–ù–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—ã:\n'+pars_func.parse_clients()+'\n'+data.our_projects)

		elif  message.text == 'ü§ù –°—Ç–∞—Ç—å –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–æ–º':
			bot.send_message(message.chat.id, data.clients)
			data.flag = True

		elif  message.text == 'üè¢ –ù–∞—à–∏ –∞–¥—Ä–µ—Å–∞':
			bot.send_message(message.chat.id, pars_func.parse_adres())

		elif data.number_ver(message.text) and data.flag == True and ((len(message.text)==12 and message.text[0]+message.text[1]=='+7') or (len(message.text)==11 and (message.text[0]=='7' or message.text[0]=='8'))):
			sendmail.doka_send("–£ –Ω–∞—Å –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç, –µ–≥–æ –∑–æ–≤—É—Ç {0.first_name}, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –µ–º—É –ø–æ –Ω–æ–º–µ—Ä—É: {1}".format(message.from_user, message.text))
			bot.send_message(message.chat.id,"–°–ø–∞—Å–∏–±–æ {0.first_name}!\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏\n–ø–æ –Ω–æ–º–µ—Ä—É: {1}.".format(message.from_user, message.text))
			data.flag=False

		elif data.number_ver(message.text) and len(message.text)!=10 and data.flag == True:
			bot.send_message(message.chat.id,"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
			
		else:
			bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ—Å–ø–æ–ª—å—É–π—Ç–µ—Å—å –æ–¥–Ω–æ–π –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ ‚¨á")

@bot.message_handler(content_types = ['contact'])
def share_phone(message):
			sendmail.doka_send("–£ –Ω–∞—Å –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç, –µ–≥–æ –∑–æ–≤—É—Ç {0}, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –µ–º—É –ø–æ –Ω–æ–º–µ—Ä—É: {1}".format(message.contact.first_name, message.contact.phone_number))
			bot.send_message(message.chat.id,"–°–ø–∞—Å–∏–±–æ {0}!\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏\n–ø–æ –Ω–æ–º–µ—Ä—É: {1}.".format(message.contact.first_name, message.contact.phone_number))
			data.flag=False

bot.polling(none_stop=True)